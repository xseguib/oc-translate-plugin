<div
        class="layout-absolute"
        data-control="languages-selector"
>
    <select id="wg-original-language-selector" name="original_language" class="languages">
        <?php if($selector !== '') { ?>
            <option value="<?= $selector ?>" selected></option>
        <?php } ?>
    </select>
</div>

<br /><br /><br />
<script>
    var data = <?= $data ?>;
    var lastValue = null;

    var wgOriginalLanguageElement = $('#wg-original-language-selector').selectize({
        delimiter: '|',
        persist: false,
        maxItems: null,
        maxItems: 1,
        valueField: 'code',
        labelField: 'local',
        searchField: ['code', 'english', 'local'],
        sortField: [
            {field: 'code', direction: 'asc'},
            {field: 'english', direction: 'asc'}
        ],
        options: <?= $languages ?>,
        render: {
            option: function(item, escape) {
                return '<div>' +
                         '<span class="local">' + escape(item.local) + '</span>' +
                         '<span class="english">' + escape(item.english) + ' [' + escape(item.code) + ']</span>' +
                       '</div>';
            }
        },
        onChange: function(value) {
            var doRemoveNewValue = true;

            // triggered change - in this case, value is undefined so we have to use `.val()` function
            if(typeof value === "undefined") {
                value = wgOriginalLanguageElement.val();
            }

            // if we removed the value, there is no "new value", we just handle lastValue stuff ...
            if(value === "") {
                value = null;
                doRemoveNewValue = false;
            }

            // addOption - based on last value
            if(lastValue !== null) {
                wgDestinationLanguages.addOption(data[lastValue]);
            }

            if(doRemoveNewValue) {
                // removeOption - based on current value
                wgDestinationLanguages.removeOption(value);
            }

            // refreshOptions & save last value
            wgDestinationLanguages.refreshOptions(false);
            lastValue = value;
        }
    });

    var wgOriginalLanguage = wgOriginalLanguageElement[0].selectize;

    $(function() {
        wgOriginalLanguage.trigger('change');
    });
</script>